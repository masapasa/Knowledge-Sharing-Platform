"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/db/notes";
exports.ids = ["pages/api/db/notes"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "firebase-admin/app":
/*!*************************************!*\
  !*** external "firebase-admin/app" ***!
  \*************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/app");;

/***/ }),

/***/ "firebase-admin/auth":
/*!**************************************!*\
  !*** external "firebase-admin/auth" ***!
  \**************************************/
/***/ ((module) => {

module.exports = import("firebase-admin/auth");;

/***/ }),

/***/ "(api)/./src/pages/api/db/notes/index.ts":
/*!*****************************************!*\
  !*** ./src/pages/api/db/notes/index.ts ***!
  \*****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ noteHandler)\n/* harmony export */ });\n/* harmony import */ var _utils_firebaseAdminInit__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../../utils/firebaseAdminInit */ \"(api)/./src/utils/firebaseAdminInit.ts\");\n/* harmony import */ var _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../../utils/prismaClientInit */ \"(api)/./src/utils/prismaClientInit.ts\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([_utils_firebaseAdminInit__WEBPACK_IMPORTED_MODULE_0__]);\n_utils_firebaseAdminInit__WEBPACK_IMPORTED_MODULE_0__ = (__webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__)[0];\n\n\nasync function noteHandler(req, res) {\n    const { method , headers , body , query  } = req;\n    switch(method){\n        case \"GET\":\n            try {\n                const notes = await _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__.prisma.note.findMany({\n                    include: {\n                        subject: {\n                            select: {\n                                name: true\n                            }\n                        },\n                        instructor: {\n                            select: {\n                                name: true\n                            }\n                        },\n                        created_by: {\n                            select: {\n                                name: true\n                            }\n                        },\n                        upvotes: {\n                            select: {\n                                user_id: true\n                            }\n                        },\n                        _count: {\n                            select: {\n                                upvotes: true\n                            }\n                        }\n                    }\n                });\n                res.status(200).json({\n                    message: \"Notes Fetched\",\n                    result: notes\n                });\n            } catch (err) {\n                console.log(err);\n                res.status(405).json({\n                    err\n                });\n            }\n            break;\n        case \"POST\":\n            if (headers && headers.authorization) {\n                const accessToken = headers.authorization.split(\" \")[1];\n                const user = await _utils_firebaseAdminInit__WEBPACK_IMPORTED_MODULE_0__.adminAuth.verifyIdToken(accessToken);\n                if (user) {\n                    const { title , subjectCode , semester , branch , instructorId , url , isAnonymous  } = body;\n                    try {\n                        await _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__.prisma.note.create({\n                            data: {\n                                title,\n                                subject_code: subjectCode,\n                                branch,\n                                semester,\n                                instructor_id: parseInt(instructorId),\n                                url,\n                                anonymous: isAnonymous,\n                                created_by_id: user.user_id\n                            }\n                        });\n                        res.status(201).json({\n                            message: \"Notes Created\"\n                        });\n                    } catch (err1) {\n                        console.log(err1);\n                        res.status(405).json({\n                            err: err1\n                        });\n                    }\n                } else {\n                    res.status(401).json({\n                        message: \"Unauthorized Access\"\n                    });\n                }\n            } else {\n                res.status(401).json({\n                    message: \"Unauthorized Access\"\n                });\n            }\n            break;\n        case \"PUT\":\n            if (headers && headers.authorization) {\n                const accessToken1 = headers.authorization.split(\" \")[1];\n                const user1 = await _utils_firebaseAdminInit__WEBPACK_IMPORTED_MODULE_0__.adminAuth.verifyIdToken(accessToken1);\n                if (user1) {\n                    try {\n                        const { id  } = query;\n                        const { title: title1 , subjectCode: subjectCode1 , semester: semester1 , branch: branch1 , instructorId: instructorId1 , url: url1 , isAnonymous: isAnonymous1  } = body;\n                        const notes1 = await _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__.prisma.note.findUnique({\n                            where: {\n                                id: parseInt(id)\n                            }\n                        });\n                        if (notes1) {\n                            if (user1.user_id === notes1.created_by_id) {\n                                await _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__.prisma.note.update({\n                                    where: {\n                                        id: parseInt(id)\n                                    },\n                                    data: {\n                                        title: title1,\n                                        subject_code: subjectCode1,\n                                        branch: branch1,\n                                        semester: semester1,\n                                        instructor_id: instructorId1,\n                                        url: url1,\n                                        anonymous: isAnonymous1,\n                                        created_by_id: user1.user_id\n                                    }\n                                });\n                                res.status(200).json({\n                                    message: \"Notes Updated\"\n                                });\n                            } else {\n                                res.status(405).json({\n                                    message: \"Unauthorized Access\"\n                                });\n                            }\n                        } else {\n                            res.status(404).json({\n                                message: \"No Notes Found\"\n                            });\n                        }\n                    } catch (err2) {\n                        console.log(err2);\n                        res.status(405).json({\n                            err: err2\n                        });\n                    }\n                }\n            } else {\n                res.status(401).json({\n                    message: \"Unauthorized Access\"\n                });\n            }\n            break;\n        case \"DELETE\":\n            if (headers && headers.authorization) {\n                const accessToken2 = headers.authorization.split(\" \")[1];\n                const user2 = await _utils_firebaseAdminInit__WEBPACK_IMPORTED_MODULE_0__.adminAuth.verifyIdToken(accessToken2);\n                if (user2) {\n                    try {\n                        const { id: id1  } = query;\n                        const notes2 = await _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__.prisma.note.findUnique({\n                            where: {\n                                id: parseInt(id1)\n                            }\n                        });\n                        if (notes2) {\n                            if (user2.user_id === notes2.created_by_id) {\n                                await _utils_prismaClientInit__WEBPACK_IMPORTED_MODULE_1__.prisma.note[\"delete\"]({\n                                    where: {\n                                        id: parseInt(id1)\n                                    }\n                                });\n                                res.status(200).json({\n                                    message: \"Notes Deleted Successfully\"\n                                });\n                            } else {\n                                res.status(405).json({\n                                    message: \"Unauthorized Access\"\n                                });\n                            }\n                        } else {\n                            res.status(404).json({\n                                message: \"No Notes Found\"\n                            });\n                        }\n                    } catch (err3) {\n                        console.log(err3);\n                        res.status(405).json({\n                            err: err3\n                        });\n                    }\n                } else {\n                    res.status(401).json({\n                        message: \"Unauthorized Access\"\n                    });\n                }\n            } else {\n                res.status(401).json({\n                    message: \"Unauthorized Access\"\n                });\n            }\n            break;\n        default:\n            res.status(405).json({\n                message: \"Method Not Allowed\"\n            });\n    }\n}\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./src/pages/api/db/notes/index.ts\n");

/***/ }),

/***/ "(api)/./src/utils/firebaseAdminInit.ts":
/*!****************************************!*\
  !*** ./src/utils/firebaseAdminInit.ts ***!
  \****************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.a(module, async (__webpack_handle_async_dependencies__, __webpack_async_result__) => { try {\n__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"adminAuth\": () => (/* binding */ adminAuth)\n/* harmony export */ });\n/* harmony import */ var firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase-admin/app */ \"firebase-admin/app\");\n/* harmony import */ var firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase-admin/auth */ \"firebase-admin/auth\");\nvar __webpack_async_dependencies__ = __webpack_handle_async_dependencies__([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__]);\n([firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__, firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__] = __webpack_async_dependencies__.then ? (await __webpack_async_dependencies__)() : __webpack_async_dependencies__);\n\n\nconst { privateKey  } = JSON.parse(process.env.PRIVATE_KEY);\nconst credentials = {\n    projectId: process.env.PROJECT_ID,\n    privateKey: privateKey,\n    clientEmail: process.env.CLIENT_EMAIL\n};\nconst options = {\n    credential: (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.cert)(credentials),\n    databaseURL: process.env.databaseURL\n};\nfunction createFirebaseAdminApp(config) {\n    if ((0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.getApps)().length === 0) {\n        return (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.initializeApp)(config);\n    } else {\n        return (0,firebase_admin_app__WEBPACK_IMPORTED_MODULE_0__.getApp)();\n    }\n}\nconst firebaseAdmin = createFirebaseAdminApp(options);\nconst adminAuth = (0,firebase_admin_auth__WEBPACK_IMPORTED_MODULE_1__.getAuth)(firebaseAdmin);\n\n__webpack_async_result__();\n} catch(e) { __webpack_async_result__(e); } });//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvZmlyZWJhc2VBZG1pbkluaXQudHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBTzJCO0FBQ2tCO0FBRTdDLE1BQU0sRUFBRUssV0FBVSxFQUFFLEdBQUdDLEtBQUtDLEtBQUssQ0FBQ0MsUUFBUUMsR0FBRyxDQUFDQyxXQUFXO0FBRXpELE1BQU1DLGNBQThCO0lBQ2hDQyxXQUFXSixRQUFRQyxHQUFHLENBQUNJLFVBQVU7SUFDakNSLFlBQVlBO0lBQ1pTLGFBQWFOLFFBQVFDLEdBQUcsQ0FBQ00sWUFBWTtBQUN6QztBQUVBLE1BQU1DLFVBQXNCO0lBQ3hCQyxZQUFZakIsd0RBQUlBLENBQUNXO0lBQ2pCTyxhQUFhVixRQUFRQyxHQUFHLENBQUNTLFdBQVc7QUFDeEM7QUFFQSxTQUFTQyx1QkFBdUJDLE1BQWtCLEVBQUU7SUFDaEQsSUFBSWxCLDJEQUFPQSxHQUFHbUIsTUFBTSxLQUFLLEdBQUc7UUFDeEIsT0FBT2xCLGlFQUFhQSxDQUFDaUI7SUFDekIsT0FBTztRQUNILE9BQU9uQiwwREFBTUE7SUFDakIsQ0FBQztBQUNMO0FBRUEsTUFBTXFCLGdCQUFnQkgsdUJBQXVCSDtBQUN0QyxNQUFNTyxZQUFZbkIsNERBQU9BLENBQUNrQixlQUFjIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8va25vd2xlZGdlLXNoYXJpbmctYXBwLy4vc3JjL3V0aWxzL2ZpcmViYXNlQWRtaW5Jbml0LnRzP2Y0ZTciXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcbiAgICBBcHBPcHRpb25zLFxuICAgIGNlcnQsXG4gICAgZ2V0QXBwLFxuICAgIGdldEFwcHMsXG4gICAgaW5pdGlhbGl6ZUFwcCxcbiAgICBTZXJ2aWNlQWNjb3VudCxcbn0gZnJvbSAnZmlyZWJhc2UtYWRtaW4vYXBwJ1xuaW1wb3J0IHsgZ2V0QXV0aCB9IGZyb20gJ2ZpcmViYXNlLWFkbWluL2F1dGgnXG5cbmNvbnN0IHsgcHJpdmF0ZUtleSB9ID0gSlNPTi5wYXJzZShwcm9jZXNzLmVudi5QUklWQVRFX0tFWSEpXG5cbmNvbnN0IGNyZWRlbnRpYWxzOiBTZXJ2aWNlQWNjb3VudCA9IHtcbiAgICBwcm9qZWN0SWQ6IHByb2Nlc3MuZW52LlBST0pFQ1RfSUQsXG4gICAgcHJpdmF0ZUtleTogcHJpdmF0ZUtleSxcbiAgICBjbGllbnRFbWFpbDogcHJvY2Vzcy5lbnYuQ0xJRU5UX0VNQUlMLFxufVxuXG5jb25zdCBvcHRpb25zOiBBcHBPcHRpb25zID0ge1xuICAgIGNyZWRlbnRpYWw6IGNlcnQoY3JlZGVudGlhbHMpLFxuICAgIGRhdGFiYXNlVVJMOiBwcm9jZXNzLmVudi5kYXRhYmFzZVVSTCxcbn1cblxuZnVuY3Rpb24gY3JlYXRlRmlyZWJhc2VBZG1pbkFwcChjb25maWc6IEFwcE9wdGlvbnMpIHtcbiAgICBpZiAoZ2V0QXBwcygpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gaW5pdGlhbGl6ZUFwcChjb25maWcpXG4gICAgfSBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGdldEFwcCgpXG4gICAgfVxufVxuXG5jb25zdCBmaXJlYmFzZUFkbWluID0gY3JlYXRlRmlyZWJhc2VBZG1pbkFwcChvcHRpb25zKVxuZXhwb3J0IGNvbnN0IGFkbWluQXV0aCA9IGdldEF1dGgoZmlyZWJhc2VBZG1pbilcbiJdLCJuYW1lcyI6WyJjZXJ0IiwiZ2V0QXBwIiwiZ2V0QXBwcyIsImluaXRpYWxpemVBcHAiLCJnZXRBdXRoIiwicHJpdmF0ZUtleSIsIkpTT04iLCJwYXJzZSIsInByb2Nlc3MiLCJlbnYiLCJQUklWQVRFX0tFWSIsImNyZWRlbnRpYWxzIiwicHJvamVjdElkIiwiUFJPSkVDVF9JRCIsImNsaWVudEVtYWlsIiwiQ0xJRU5UX0VNQUlMIiwib3B0aW9ucyIsImNyZWRlbnRpYWwiLCJkYXRhYmFzZVVSTCIsImNyZWF0ZUZpcmViYXNlQWRtaW5BcHAiLCJjb25maWciLCJsZW5ndGgiLCJmaXJlYmFzZUFkbWluIiwiYWRtaW5BdXRoIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./src/utils/firebaseAdminInit.ts\n");

/***/ }),

/***/ "(api)/./src/utils/prismaClientInit.ts":
/*!***************************************!*\
  !*** ./src/utils/prismaClientInit.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"prisma\": () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\nconst prisma = new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9zcmMvdXRpbHMvcHJpc21hQ2xpZW50SW5pdC50cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFFdEMsTUFBTUMsU0FBUyxJQUFJRCx3REFBWUEsR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL2tub3dsZWRnZS1zaGFyaW5nLWFwcC8uL3NyYy91dGlscy9wcmlzbWFDbGllbnRJbml0LnRzPzZiOWYiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbmV4cG9ydCBjb25zdCBwcmlzbWEgPSBuZXcgUHJpc21hQ2xpZW50KClcbiJdLCJuYW1lcyI6WyJQcmlzbWFDbGllbnQiLCJwcmlzbWEiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api)/./src/utils/prismaClientInit.ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./src/pages/api/db/notes/index.ts"));
module.exports = __webpack_exports__;

})();